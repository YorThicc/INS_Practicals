class homophonic:
    def charTable():
        return [
            ["A", ["†", "„", "§", "É"]],
            [" ", ["Ú", "Ý", "Ü", "Þ"]],
            ["B", ["€", "¦", "È", "Ò"]],
            ["C", ["Š", "‡", "Ë", "Ï"]],
            ["D", ["ƒ", "‘", "¢", "Ê"]],
            ["E", ["Ž", ".", "£", "Ì"]],
            ["F", ["™", ":", "Ä", "Ö"]],
            ["G", [",", "^", "\"", "á"]],
            ["H", ["#", "!", "¤", "Å"]],
            ["I", ["@", "¥", "ã"]],
            ["J", ["A", "2", "À", "Ù"]],
            ["K", ["b", "1", "Á", "Õ"]],
            ["L", ["6", "8", "Â", "é"]],
            ["M", ["4", "0", "¿", "ù"]],
            ["N", ["5", "c", "»", "ç"]],
            ["O", ["z", "I", "º", "æ"]],
            ["P", ["š", "/", "¹", "à"]],
            ["Q", ["\\", "=", "¸", "û"]],
            ["R", ["+", "%", "µ", "Ø"]],
            ["S", ["*", ")", "³", "ê"]],
            ["T", ["]", "(", "²", "ì"]],
            ["U", ["}", "{", "ž", "Ð"]],
            ["V", ["_", "r", "¬", "Ñ"]],
            ["W", ["-", "&", "©", "×"]],
            ["X", ["~", "`", "«"]],
            ["Y", [">", "|", "®"]],
            ["Z", ["?", "<", "°"]],
            ["0", ["Æ", "Ç", "Ô"]],
            ["1", ["ä", "ø", "ï"]],
            ["2", ["ß", "õ", "ÿ"]],
            ["3", ["è", "ö", "ô"]],
            ["4", ["Ó", "þ", "ò"]],
            ["5", ["ë", "ü", "ó"]],
            ["6", ["í", "a", "ð"]],
            ["7", ["ñ", "ý", "î"]],
            ["8", ["÷", "n", "â"]],
            ["9", ["ú", "p", "å"]],
        ]
    def encode(plaintext):
        import random
        result = ""
        for each in plaintext.upper():
            for encodes in homophonic.charTable():
                if encodes[0] == each:
                    result += str(random.choice(encodes[1]))
                    break
        return result
if __name__ == '__main__':
    import textwrap
    plainText = input("Enter the text: ")
    encoded = homophonic.encode(plainText)
    print("Ciphered Text: ", textwrap.fill(encoded, 200))
